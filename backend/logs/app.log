2025-09-11 12:48:01 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 12:48:01 [ERROR]: ❌ Database connection failed: Authentication failed against database server at `localhost`, the provided database credentials for `anisha` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`.
Stack: PrismaClientInitializationError: Authentication failed against database server at `localhost`, the provided database credentials for `anisha` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`.
    at t (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:112:2488)
    at async DatabaseManager.connect (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/config/database.ts:75:7)
    at async startServer (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/server.ts:14:5)
Meta: {
  "service": "hrm-backend",
  "name": "PrismaClientInitializationError",
  "clientVersion": "5.22.0",
  "errorCode": "P1000"
}
2025-09-11 12:48:57 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 12:48:57 [ERROR]: ❌ Database connection failed: Authentication failed against database server at `localhost`, the provided database credentials for `anisha` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`.
Stack: PrismaClientInitializationError: Authentication failed against database server at `localhost`, the provided database credentials for `anisha` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`.
    at t (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:112:2488)
    at async DatabaseManager.connect (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/config/database.ts:75:7)
    at async startServer (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/server.ts:14:5)
Meta: {
  "service": "hrm-backend",
  "name": "PrismaClientInitializationError",
  "clientVersion": "5.22.0",
  "errorCode": "P1000"
}
2025-09-11 12:59:12 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 12:59:12 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 12:59:12 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "3ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 12:59:12 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 12:59:12 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 12:59:12 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 12:59:12 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 12:59:12 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 12:59:12 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 12:59:12 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 12:59:12 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 12:59:58 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 12:59:58 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 12:59:58 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:05 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 13:04:05 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:05 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 13:04:05 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:05 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:05 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:05 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:05 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:05 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:05 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:05 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:55 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:55 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:04:55 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:11 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 13:05:11 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:11 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 13:05:11 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:11 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:11 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:11 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:11 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:11 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:11 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:11 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:32 [ERROR]: Uncaught Exception: Cannot set headers after they are sent to the client
Stack: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:700:11)
    at ServerResponse.<anonymous> (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/middleware/logger.middleware.ts:77:9)
    at ServerResponse.emit (node:events:530:35)
    at onFinish (node:_http_outgoing:1082:10)
    at callback (node:internal/streams/writable:766:21)
    at afterWrite (node:internal/streams/writable:710:5)
    at afterWriteTick (node:internal/streams/writable:696:10)
    at process.processTicksAndRejections (node:internal/process/task_queues:89:21)
Meta: {
  "service": "hrm-backend",
  "code": "ERR_HTTP_HEADERS_SENT"
}
2025-09-11 13:05:32 [INFO]: UNCAUGHT_EXCEPTION received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:32 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:32 [INFO]: GET /api-docs 301 158 - 5.488 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:05:32 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:10:28 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 13:10:28 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:10:28 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 13:10:28 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:10:28 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:10:28 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:10:28 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:10:28 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:10:28 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:10:28 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:10:28 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:01 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:01 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:01 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:26 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 13:11:26 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:26 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "0ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 13:11:26 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:26 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:26 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:26 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:26 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:26 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:26 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:26 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:45 [INFO]: GET /health 200 253 - 4.399 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:58 [INFO]: GET /health 200 253 - 0.790 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:11:58 [INFO]: GET /favicon.ico 404 124 - 2.598 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:48 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:48 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:48 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:48 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:49 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 13:12:49 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:49 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 13:12:49 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:49 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:49 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:49 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:49 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:49 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:49 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:12:49 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:13:10 [INFO]: GET /api/v1 200 287 - 3.354 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:13:10 [INFO]: GET /favicon.ico 404 124 - 1.765 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:13:40 [INFO]: GET /api/v1/auth 404 124 - 1.645 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:13:41 [INFO]: GET /favicon.ico 404 124 - 0.631 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:14:18 [INFO]: GET /api-docs 301 158 - 3.172 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:14:18 [INFO]: GET /api-docs/ 200 - - 2.877 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:14:18 [INFO]: GET /api-docs/swagger-ui-init.js 200 - - 0.595 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:14:18 [INFO]: GET /api-docs/swagger-ui.css 200 - - 14.950 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:14:18 [INFO]: GET /api-docs/swagger-ui-standalone-preset.js 200 - - 10.019 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:14:18 [INFO]: GET /api-docs/swagger-ui-bundle.js 200 - - 11.366 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:14:18 [INFO]: GET /api-docs/favicon-32x32.png 200 628 - 1.221 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:14:55 [INFO]: Get current user attempt
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:14:55 [INFO]: GET /api/v1/auth/me 200 148 - 1.065 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:15:26 [INFO]: Get current user attempt
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:15:26 [INFO]: GET /api/v1/auth/me 304 - - 1.766 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:17:48 [WARN]: Validation failed
Meta: {
  "service": "hrm-backend",
  "errors": [
    {
      "field": "body.password",
      "message": "Password must be at least 6 characters",
      "code": "too_small"
    }
  ],
  "url": "/api/v1/auth/register",
  "method": "POST"
}
2025-09-11 13:17:48 [ERROR]: Application Error Validation failed: body.password: Password must be at least 6 characters
Stack: Error: Validation failed: body.password: Password must be at least 6 characters
    at <anonymous> (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/middleware/validation.middleware.ts:39:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
Meta: {
  "service": "hrm-backend",
  "statusCode": 400,
  "isOperational": true,
  "method": "POST",
  "url": "/api/v1/auth/register",
  "ip": "::ffff:127.0.0.1",
  "userAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:142.0) Gecko/20100101 Firefox/142.0"
}
2025-09-11 13:17:48 [INFO]: POST /api/v1/auth/register 400 168 - 7.118 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:18:23 [INFO]: Registration attempt
Meta: {
  "service": "hrm-backend",
  "email": "anishashende369@gmail.com"
}
2025-09-11 13:18:23 [INFO]: POST /api/v1/auth/register 201 151 - 1.792 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:30:54 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:30:54 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 13:30:54 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:06 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:25:06 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:06 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:25:06 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:06 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:06 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:06 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:06 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:06 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:06 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:06 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:19 [INFO]: GET /api-docs?id=3e10e4f8-3769-42fd-9763-ade78cafaeee&vscodeBrowserReqId=1757584519557 301 235 - 5.071 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:19 [INFO]: GET /api-docs/?id=3e10e4f8-3769-42fd-9763-ade78cafaeee&vscodeBrowserReqId=1757584519557 200 - - 5.118 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:49 [INFO]: GET /api-docs?id=3e10e4f8-3769-42fd-9763-ade78cafaeee&vscodeBrowserReqId=1757584549971 301 235 - 0.890 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:25:49 [INFO]: GET /api-docs/?id=3e10e4f8-3769-42fd-9763-ade78cafaeee&vscodeBrowserReqId=1757584549971 200 - - 1.040 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:26:36 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:26:36 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:26:36 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:15 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:27:15 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:16 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:27:16 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:16 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:16 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:16 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:16 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:16 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:16 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:16 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:24 [INFO]: GET /api-docs?id=3e10e4f8-3769-42fd-9763-ade78cafaeee&vscodeBrowserReqId=1757584644860 301 235 - 3.214 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:24 [INFO]: GET /api-docs/?id=3e10e4f8-3769-42fd-9763-ade78cafaeee&vscodeBrowserReqId=1757584644860 200 - - 2.616 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:42 [INFO]: GET /api-docs 301 158 - 1.012 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:42 [INFO]: GET /api-docs/ 304 - - 2.116 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:42 [INFO]: GET /api-docs/swagger-ui.css 304 - - 3.251 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:42 [INFO]: GET /api-docs/swagger-ui-standalone-preset.js 304 - - 2.974 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:42 [INFO]: GET /api-docs/swagger-ui-init.js 304 - - 0.884 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:42 [INFO]: GET /api-docs/swagger-ui-bundle.js 304 - - 10.033 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:27:43 [INFO]: GET /api-docs/favicon-32x32.png - - - - ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:30:21 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:30:21 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:30:21 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:30:46 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:30:46 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:30:46 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:32:45 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:32:45 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:32:45 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:33:10 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:33:10 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:33:10 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "0ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:34:13 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:34:13 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:13 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:34:13 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:13 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:13 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:13 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:13 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:13 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:13 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:13 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:24 [INFO]: GET /health 200 253 - 5.538 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:25 [INFO]: GET /favicon.ico 404 124 - 1.825 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:31 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:31 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:31 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:42 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:34:42 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:42 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:34:42 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:42 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:42 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:42 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:42 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:42 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:42 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:34:42 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:35:01 [INFO]: GET /api-docs/ 304 - - 7.000 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:35:01 [INFO]: GET /api-docs/swagger-ui.css 304 - - 6.157 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:35:01 [INFO]: GET /api-docs/swagger-ui-bundle.js 304 - - 2.516 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:35:01 [INFO]: GET /api-docs/swagger-ui-standalone-preset.js 304 - - 1.530 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:35:01 [INFO]: GET /api-docs/swagger-ui-init.js 304 - - 1.292 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:37:09 [INFO]: GET /api/v1 200 287 - 0.997 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:37:35 [INFO]: GET /health 200 253 - 1.020 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:39:12 [INFO]: Registration attempt
Meta: {
  "service": "hrm-backend",
  "email": "anishashende369@gmail.com"
}
2025-09-11 15:39:12 [INFO]: POST /api/v1/auth/register 201 151 - 5.774 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:40:25 [INFO]: Login attempt
Meta: {
  "service": "hrm-backend",
  "email": "anishashende369@gmail.com"
}
2025-09-11 15:40:25 [INFO]: POST /api/v1/auth/login 200 196 - 2.355 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:41:19 [INFO]: Token refresh attempt
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:41:19 [INFO]: POST /api/v1/auth/refresh 200 127 - 1.963 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:42:04 [INFO]: Get current user attempt
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:42:04 [INFO]: GET /api/v1/auth/me 200 148 - 1.288 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:42:28 [INFO]: Get current user attempt
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:42:28 [INFO]: GET /api/v1/auth/me 200 148 - 1.364 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:42:33 [INFO]: Get current user attempt
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:42:33 [INFO]: GET /api/v1/auth/me 200 148 - 1.110 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:43:23 [INFO]: Logout attempt
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:43:23 [INFO]: POST /api/v1/auth/logout 200 46 - 1.474 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:44:17 [INFO]: Get all employees request
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:44:17 [INFO]: GET /api/v1/employees 200 168 - 1.483 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:45:19 [INFO]: Get employee by ID request
Meta: {
  "service": "hrm-backend",
  "employeeId": "123"
}
2025-09-11 15:45:19 [INFO]: GET /api/v1/employees/123 200 141 - 2.297 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:56 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:56 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:56 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:56 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:58 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:49:58 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:58 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:49:58 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:58 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:58 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:58 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:58 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:58 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:58 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:49:58 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:09 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:09 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:09 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:09 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:11 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:53:11 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:11 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:53:11 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:11 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:11 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:11 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:11 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:11 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:11 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:11 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:28 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:28 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:28 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:28 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:29 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:53:29 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:29 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:53:29 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:29 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:29 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:29 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:29 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:29 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:29 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:29 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:39 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:39 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:39 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:39 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:41 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:53:41 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:41 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:53:41 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:41 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:41 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:41 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:41 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:41 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:41 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:41 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:54 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:53:54 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:53:54 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:55:22 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:55:22 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:55:22 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:55:22 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:55:22 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:55:22 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:55:22 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:55:22 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:55:22 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:55:22 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:55:22 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:18 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:18 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:18 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:18 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:20 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 15:57:20 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:20 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 15:57:20 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:20 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:20 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:20 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:20 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:20 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:20 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 15:57:20 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:32 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:32 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:32 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:32 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:34 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:00:34 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:34 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:00:34 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:34 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:34 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:34 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:34 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:34 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:34 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:00:34 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:01 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:01 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:01 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:33 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:01:33 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:33 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:01:33 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:33 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:33 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:33 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:33 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:33 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:33 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:01:33 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:49 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:49 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:49 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:49 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:50 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:02:50 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:51 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:02:51 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:51 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:51 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:51 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:51 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:51 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:51 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:02:51 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:06:18 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:06:18 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:06:18 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:07:03 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:07:03 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:07:03 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:07:03 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:11:32 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:11:32 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:11:32 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:11:32 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:11:32 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:11:32 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:11:32 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:11:32 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:11:32 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:11:32 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:11:32 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:11:50 [INFO]: GET /api-docs?id=8e3328da-a8ad-48d2-8d49-b390f5a3205e&vscodeBrowserReqId=1757587310538 301 235 - 6.549 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:11:50 [INFO]: GET /api-docs/?id=8e3328da-a8ad-48d2-8d49-b390f5a3205e&vscodeBrowserReqId=1757587310538 200 - - 5.612 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:18 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:18 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:18 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:18 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:19 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:12:19 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:19 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:12:19 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:19 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:19 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:19 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:19 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:19 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:19 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:19 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:53 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:53 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:53 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:12:53 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:01 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:13:01 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:01 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:13:01 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:01 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:01 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:01 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:01 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:01 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:01 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:01 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:06 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:06 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:06 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:06 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:08 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:13:08 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:08 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "2ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:13:08 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:08 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:08 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:08 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:08 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:08 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:08 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:08 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:11 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:11 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:11 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:11 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:13 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:13:13 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:13 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:13:13 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:13 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:13 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:13 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:13 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:13 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:13 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:13 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:44 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:44 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:44 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:44 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:45 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:13:45 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:45 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "0ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:13:45 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:45 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:45 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:45 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:45 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:45 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:45 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:13:45 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:25 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:25 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:25 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:25 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:27 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:14:27 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:27 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:14:27 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:27 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:27 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:27 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:27 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:27 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:27 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:14:27 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:16 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:16 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:16 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:16 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:19 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:16:19 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:19 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "2ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:16:19 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:19 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:19 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:19 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:19 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:19 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:19 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:19 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:26 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:26 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:26 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:26 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:28 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:16:28 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:28 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:16:28 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:28 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:28 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:28 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:28 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:28 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:28 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:16:28 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:17:10 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:17:10 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:17:10 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:14 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:19:14 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:14 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "2ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:19:14 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:14 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:14 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:14 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:14 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:14 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:14 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:14 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:19:46 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "0ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:19:46 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:19:46 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:21:31 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "0ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:21:31 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:31 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:38 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:38 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:38 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:38 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:39 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:21:39 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:39 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "0ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:21:39 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:39 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:39 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:39 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:39 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:39 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:39 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:21:39 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:56 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:56 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:56 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:56 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:57 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 16:22:57 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:57 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "0ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 16:22:57 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:57 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:57 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:57 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:57 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:57 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:57 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:22:57 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:25:00 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:25:00 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-11 16:25:00 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:37:36 [ERROR]: unhandledRejection: Unable to require(`/app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node`).
The Prisma engines do not seem to be compatible with your system. Please refer to the documentation about Prisma's system requirements: https://pris.ly/d/system-requirements

Details: Error loading shared library libssl.so.1.1: No such file or directory (needed by /app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node)
PrismaClientInitializationError: Unable to require(`/app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node`).
The Prisma engines do not seem to be compatible with your system. Please refer to the documentation about Prisma's system requirements: https://pris.ly/d/system-requirements

Details: Error loading shared library libssl.so.1.1: No such file or directory (needed by /app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node)
    at Object.loadLibrary (/app/node_modules/@prisma/client/runtime/library.js:111:10243)
    at async _r.loadEngine (/app/node_modules/@prisma/client/runtime/library.js:112:448)
    at async _r.instantiateLibrary (/app/node_modules/@prisma/client/runtime/library.js:111:12599)
Stack: PrismaClientInitializationError: Unable to require(`/app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node`).
The Prisma engines do not seem to be compatible with your system. Please refer to the documentation about Prisma's system requirements: https://pris.ly/d/system-requirements

Details: Error loading shared library libssl.so.1.1: No such file or directory (needed by /app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node)
    at Object.loadLibrary (/app/node_modules/@prisma/client/runtime/library.js:111:10243)
    at async _r.loadEngine (/app/node_modules/@prisma/client/runtime/library.js:112:448)
    at async _r.instantiateLibrary (/app/node_modules/@prisma/client/runtime/library.js:111:12599)
Meta: {
  "error": {
    "name": "PrismaClientInitializationError",
    "clientVersion": "5.22.0"
  },
  "rejection": true,
  "date": "Thu Sep 11 2025 17:37:36 GMT+0000 (Coordinated Universal Time)",
  "process": {
    "pid": 29,
    "uid": 0,
    "gid": 0,
    "cwd": "/app",
    "execPath": "/usr/local/bin/node",
    "version": "v18.20.8",
    "argv": [
      "/usr/local/bin/node",
      "/app/src/server.ts"
    ],
    "memoryUsage": {
      "rss": 121393152,
      "heapTotal": 38223872,
      "heapUsed": 23830376,
      "external": 2776720,
      "arrayBuffers": 228221
    }
  },
  "os": {
    "loadavg": [
      0.18,
      0.17,
      0.53
    ],
    "uptime": 2480.23
  },
  "trace": [
    {
      "column": 10243,
      "file": "/app/node_modules/@prisma/client/runtime/library.js",
      "function": "Object.loadLibrary",
      "line": 111,
      "method": "loadLibrary",
      "native": false
    },
    {
      "column": 448,
      "file": "/app/node_modules/@prisma/client/runtime/library.js",
      "function": "async _r.loadEngine",
      "line": 112,
      "method": "loadEngine",
      "native": false
    },
    {
      "column": 12599,
      "file": "/app/node_modules/@prisma/client/runtime/library.js",
      "function": "async _r.instantiateLibrary",
      "line": 111,
      "method": "instantiateLibrary",
      "native": false
    }
  ],
  "service": "hrm-backend"
}
2025-09-11 17:38:45 [ERROR]: unhandledRejection: Unable to require(`/app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node`).
The Prisma engines do not seem to be compatible with your system. Please refer to the documentation about Prisma's system requirements: https://pris.ly/d/system-requirements

Details: Error loading shared library libssl.so.1.1: No such file or directory (needed by /app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node)
PrismaClientInitializationError: Unable to require(`/app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node`).
The Prisma engines do not seem to be compatible with your system. Please refer to the documentation about Prisma's system requirements: https://pris.ly/d/system-requirements

Details: Error loading shared library libssl.so.1.1: No such file or directory (needed by /app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node)
    at Object.loadLibrary (/app/node_modules/@prisma/client/runtime/library.js:111:10243)
    at async _r.loadEngine (/app/node_modules/@prisma/client/runtime/library.js:112:448)
    at async _r.instantiateLibrary (/app/node_modules/@prisma/client/runtime/library.js:111:12599)
Stack: PrismaClientInitializationError: Unable to require(`/app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node`).
The Prisma engines do not seem to be compatible with your system. Please refer to the documentation about Prisma's system requirements: https://pris.ly/d/system-requirements

Details: Error loading shared library libssl.so.1.1: No such file or directory (needed by /app/node_modules/.prisma/client/libquery_engine-linux-musl.so.node)
    at Object.loadLibrary (/app/node_modules/@prisma/client/runtime/library.js:111:10243)
    at async _r.loadEngine (/app/node_modules/@prisma/client/runtime/library.js:112:448)
    at async _r.instantiateLibrary (/app/node_modules/@prisma/client/runtime/library.js:111:12599)
Meta: {
  "error": {
    "name": "PrismaClientInitializationError",
    "clientVersion": "5.22.0"
  },
  "rejection": true,
  "date": "Thu Sep 11 2025 17:38:45 GMT+0000 (Coordinated Universal Time)",
  "process": {
    "pid": 29,
    "uid": 0,
    "gid": 0,
    "cwd": "/app",
    "execPath": "/usr/local/bin/node",
    "version": "v18.20.8",
    "argv": [
      "/usr/local/bin/node",
      "/app/src/server.ts"
    ],
    "memoryUsage": {
      "rss": 107597824,
      "heapTotal": 38748160,
      "heapUsed": 21678512,
      "external": 2600738,
      "arrayBuffers": 52103
    }
  },
  "os": {
    "loadavg": [
      0.17,
      0.16,
      0.5
    ],
    "uptime": 2549.35
  },
  "trace": [
    {
      "column": 10243,
      "file": "/app/node_modules/@prisma/client/runtime/library.js",
      "function": "Object.loadLibrary",
      "line": 111,
      "method": "loadLibrary",
      "native": false
    },
    {
      "column": 448,
      "file": "/app/node_modules/@prisma/client/runtime/library.js",
      "function": "async _r.loadEngine",
      "line": 112,
      "method": "loadEngine",
      "native": false
    },
    {
      "column": 12599,
      "file": "/app/node_modules/@prisma/client/runtime/library.js",
      "function": "async _r.instantiateLibrary",
      "line": 111,
      "method": "instantiateLibrary",
      "native": false
    }
  ],
  "service": "hrm-backend"
}
2025-09-11 17:43:35 [INFO]: Prisma Info Starting a postgresql pool with 25 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-11 17:43:35 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:43:35 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "15ms",
  "target": "quaint::connector::metrics"
}
2025-09-11 17:43:35 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:43:35 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:43:35 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:43:35 [INFO]: 🚀 Server is running on port 3000
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:43:35 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:43:35 [INFO]: �📚 API Documentation: http://localhost:3000/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:43:35 [INFO]: 🏥 Health Check: http://localhost:3000/health
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:43:35 [INFO]: 🔗 API Base URL: http://localhost:3000/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:43:52 [INFO]: GET /health 200 253 - 7.400 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:43:52 [INFO]: GET /favicon.ico 404 124 - 3.045 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:44:11 [INFO]: GET /api-docs 301 158 - 3.689 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:44:11 [INFO]: GET /api-docs/ 304 - - 7.613 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:44:11 [INFO]: GET /api-docs/swagger-ui.css 304 - - 3.741 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:44:12 [INFO]: GET /api-docs/swagger-ui-init.js 304 - - 1.500 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:44:12 [INFO]: GET /api-docs/swagger-ui-bundle.js 304 - - 10.859 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:44:12 [INFO]: GET /api-docs/swagger-ui-standalone-preset.js 304 - - 6.757 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-11 17:44:12 [INFO]: GET /api-docs/favicon-32x32.png - - - - ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 21:59:32 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-14 21:59:32 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-14 21:59:32 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "2ms",
  "target": "quaint::connector::metrics"
}
2025-09-14 21:59:32 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-14 21:59:32 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-14 21:59:32 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-14 21:59:32 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-14 21:59:32 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-14 21:59:32 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-14 21:59:32 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-14 21:59:32 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:00:44 [INFO]: GET /api-docs 301 158 - 4.805 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:00:44 [INFO]: GET /api-docs/ 200 - - 4.417 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:00:44 [INFO]: GET /api-docs/swagger-ui-init.js 200 - - 0.784 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:00:44 [INFO]: GET /api-docs/swagger-ui-bundle.js 304 - - 15.893 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:00:44 [INFO]: GET /api-docs/swagger-ui-standalone-preset.js 304 - - 7.451 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:00:44 [INFO]: GET /api-docs/swagger-ui.css 200 - - 25.638 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:00:44 [INFO]: GET /api-docs/favicon-32x32.png - - - - ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:00:58 [INFO]: GET /health 200 254 - 2.213 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:00:58 [INFO]: GET /favicon.ico 404 124 - 2.124 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:01:16 [INFO]: GET /api/v1 200 287 - 2.044 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:01:16 [INFO]: GET /favicon.ico 404 124 - 1.159 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:02:04 [INFO]: GET /api-docs/ 200 - - 1.296 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:02:04 [INFO]: GET /api-docs/swagger-ui-bundle.js 304 - - 1.399 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:02:04 [INFO]: GET /api-docs/swagger-ui-standalone-preset.js 304 - - 2.404 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:02:04 [INFO]: GET /api-docs/swagger-ui-init.js 304 - - 1.102 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:02:04 [INFO]: GET /api-docs/swagger-ui.css 200 - - 12.274 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:02:04 [INFO]: GET /api-docs/favicon-32x32.png - - - - ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:03:15 [INFO]: User registered successfully
Meta: {
  "service": "hrm-backend",
  "userId": "cmfjwz9js0000fcvbfaqammap",
  "email": "anisha@example.com",
  "role": "EMPLOYEE"
}
2025-09-14 22:03:15 [INFO]: Registration successful
Meta: {
  "service": "hrm-backend",
  "email": "anisha@example.com"
}
2025-09-14 22:03:15 [INFO]: POST /api/v1/auth/register 201 281 - 639.104 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:04:28 [ERROR]: Login failed
Meta: {
  "service": "hrm-backend",
  "email": "anishashende@example.com",
  "error": "Invalid email or password"
}
2025-09-14 22:04:28 [ERROR]: Unexpected Error Invalid email or password
Stack: Error: Invalid email or password
    at AuthService.login (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/auth.service.ts:177:15)
    at async login (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/auth.controller.ts:10:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/auth/login",
  "ip": "::ffff:127.0.0.1",
  "userAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:142.0) Gecko/20100101 Firefox/142.0"
}
2025-09-14 22:04:28 [INFO]: POST /api/v1/auth/login 500 501 - 13.392 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:05:01 [INFO]: User logged in successfully
Meta: {
  "service": "hrm-backend",
  "userId": "cmfjwz9js0000fcvbfaqammap",
  "email": "anisha@example.com"
}
2025-09-14 22:05:01 [INFO]: Login successful
Meta: {
  "service": "hrm-backend",
  "email": "anisha@example.com"
}
2025-09-14 22:05:01 [INFO]: POST /api/v1/auth/login 200 870 - 577.334 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:05:54 [INFO]: User logged out successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:05:54 [INFO]: Logout successful
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:05:54 [INFO]: POST /api/v1/auth/logout 200 46 - 6.728 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:06:14 [INFO]: User logged out successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:06:14 [INFO]: Logout successful
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:06:14 [INFO]: POST /api/v1/auth/logout 200 46 - 3.421 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:06:53 [INFO]: GET /api/v1/auth/me 401 42 - 0.650 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:07:36 [INFO]: User logged in successfully
Meta: {
  "service": "hrm-backend",
  "userId": "cmfjwz9js0000fcvbfaqammap",
  "email": "anisha@example.com"
}
2025-09-14 22:07:36 [INFO]: Login successful
Meta: {
  "service": "hrm-backend",
  "email": "anisha@example.com"
}
2025-09-14 22:07:36 [INFO]: POST /api/v1/auth/login 200 892 - 494.020 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:07:40 [INFO]: GET /api/v1/auth/me 401 42 - 0.370 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:08:53 [INFO]: Employees retrieved successfully
Meta: {
  "service": "hrm-backend",
  "total": 0,
  "page": 1
}
2025-09-14 22:08:53 [INFO]: GET /api/v1/employees?page=1&limit=1 200 176 - 43.111 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:10:48 [ERROR]: Failed to create employee
Meta: {
  "service": "hrm-backend",
  "email": "anishashende@example.com",
  "error": "Department not found"
}
2025-09-14 22:10:48 [ERROR]: Unexpected Error Department not found
Stack: Error: Department not found
    at EmployeeService.createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:93:15)
    at async createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:62:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/employees",
  "ip": "::ffff:127.0.0.1",
  "userAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:142.0) Gecko/20100101 Firefox/142.0"
}
2025-09-14 22:10:48 [INFO]: POST /api/v1/employees 500 520 - 13.478 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:25:21 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:25:21 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-14 22:25:21 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:15 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-14 23:21:15 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:15 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "15ms",
  "target": "quaint::connector::metrics"
}
2025-09-14 23:21:15 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:15 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:15 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:15 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:15 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:15 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:15 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:15 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:36 [INFO]: GET /api-docs 301 158 - 4.792 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:36 [INFO]: GET /api-docs/ 304 - - 5.305 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:36 [INFO]: GET /api-docs/swagger-ui.css 304 - - 4.302 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:36 [INFO]: GET /api-docs/swagger-ui-standalone-preset.js 304 - - 1.975 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:36 [INFO]: GET /api-docs/swagger-ui-bundle.js 304 - - 4.232 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:36 [INFO]: GET /api-docs/swagger-ui-init.js 200 - - 2.187 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:21:37 [INFO]: GET /api-docs/favicon-32x32.png - - - - ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:29:13 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:29:13 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-14 23:29:13 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:25 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 10:48:25 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:25 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "13ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 10:48:25 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:25 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:25 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:25 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:25 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:25 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:25 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:25 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:33 [INFO]: GET /api-docs 301 158 - 6.916 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:33 [INFO]: GET /api-docs/ 200 - - 7.028 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:34 [INFO]: GET /api-docs/swagger-ui-init.js 200 - - 1.138 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:34 [INFO]: GET /api-docs/swagger-ui.css 200 - - 12.140 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:34 [INFO]: GET /api-docs/swagger-ui-standalone-preset.js 200 - - 10.645 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:34 [INFO]: GET /api-docs/swagger-ui-bundle.js 200 - - 9.726 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:48:35 [INFO]: GET /api-docs/favicon-32x32.png 200 628 - 3.624 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:54:32 [ERROR]: Unexpected Error [
  {
    "code": "custom",
    "message": "Half day period is required when requesting half day leave",
    "path": [
      "halfDayPeriod"
    ]
  }
]
Stack: ZodError: [
  {
    "code": "custom",
    "message": "Half day period is required when requesting half day leave",
    "path": [
      "halfDayPeriod"
    ]
  }
]
    at get error (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/zod/v3/types.cjs:45:31)
    at ZodEffects.parse (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/zod/v3/types.cjs:120:22)
    at createLeaveRequest (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/leave.controller.ts:25:45)
    at Layer.handle [as handle_request] (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/express/lib/router/layer.js:95:5)
    at /home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/express/lib/router/index.js:346:12)
    at next (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/express/lib/router/index.js:280:10)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/admin/leaves/requests",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 10:54:32 [INFO]: POST /api/v1/admin/leaves/requests 500 - - 13.567 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:54:52 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT \"public\".\"employees\".\"id\", \"public\".\"employees\".\"employeeId\", \"public\".\"employees\".\"firstName\", \"public\".\"employees\".\"lastName\", \"public\".\"employees\".\"email\", \"public\".\"employees\".\"phone\", \"public\".\"employees\".\"dateOfBirth\", \"public\".\"employees\".\"hireDate\", \"public\".\"employees\".\"terminationDate\", \"public\".\"employees\".\"status\"::text, \"public\".\"employees\".\"profilePicture\", \"public\".\"employees\".\"personalInfo\", \"public\".\"employees\".\"departmentId\", \"public\".\"employees\".\"positionId\", \"public\".\"employees\".\"managerId\", \"public\".\"employees\".\"employmentType\"::text, \"public\".\"employees\".\"workLocation\"::text, \"public\".\"employees\".\"salaryGrade\", \"public\".\"employees\".\"baseSalary\", \"public\".\"employees\".\"currency\", \"public\".\"employees\".\"bankInfo\", \"public\".\"employees\".\"createdAt\", \"public\".\"employees\".\"updatedAt\", \"public\".\"employees\".\"createdById\", \"public\".\"employees\".\"updatedById\" FROM \"public\".\"employees\" WHERE (\"public\".\"employees\".\"id\" = $1 AND 1=1) LIMIT $2 OFFSET $3",
  "params": "[\"emp_123\",1,0]",
  "duration": "5ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 10:54:52 [ERROR]: Error creating leave request
Meta: {
  "service": "hrm-backend",
  "error": {
    "statusCode": 404,
    "isOperational": true,
    "timestamp": "2025-09-15T05:24:52.558Z"
  },
  "data": {
    "employeeId": "emp_123",
    "leaveTypeId": "leave_type_456",
    "startDate": "2024-01-15",
    "endDate": "2024-01-17",
    "isHalfDay": false,
    "reason": "Personal vacation with family",
    "attachments": []
  }
}
2025-09-15 10:54:52 [ERROR]: Application Error Employee not found not found
Stack: Error: Employee not found not found
    at LeaveService.createLeaveRequest (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/leave.service.ts:84:15)
    at async createLeaveRequest (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/leave.controller.ts:26:28)
Meta: {
  "service": "hrm-backend",
  "statusCode": 404,
  "isOperational": true,
  "method": "POST",
  "url": "/api/v1/admin/leaves/requests",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 10:54:52 [INFO]: POST /api/v1/admin/leaves/requests 404 124 - 73.150 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:56:03 [ERROR]: Failed to create employee
Meta: {
  "service": "hrm-backend",
  "email": "anisha@example.com",
  "error": "Department not found"
}
2025-09-15 10:56:03 [ERROR]: Unexpected Error Department not found
Stack: Error: Department not found
    at EmployeeService.createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:93:15)
    at async createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:62:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/employees",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 10:56:03 [INFO]: POST /api/v1/employees 500 520 - 125.244 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:59:55 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:59:55 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 10:59:55 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:21 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 12:22:21 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:21 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 12:22:21 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:21 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:21 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:21 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:21 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:21 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:21 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:21 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:28 [INFO]: GET /api-docs/ 304 - - 6.209 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:28 [INFO]: GET /api-docs/swagger-ui.css 304 - - 3.281 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:28 [INFO]: GET /api-docs/swagger-ui-bundle.js 304 - - 4.964 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:28 [INFO]: GET /api-docs/swagger-ui-standalone-preset.js 304 - - 4.535 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:28 [INFO]: GET /api-docs/swagger-ui-init.js 304 - - 2.473 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:22:29 [INFO]: GET /api-docs/favicon-32x32.png 304 - - 1.598 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:23:00 [INFO]: Employees retrieved successfully
Meta: {
  "service": "hrm-backend",
  "total": 10,
  "page": 1
}
2025-09-15 12:23:00 [INFO]: GET /api/v1/employees?page=1&limit=5 200 - - 139.367 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:24:39 [ERROR]: Failed to create employee
Meta: {
  "service": "hrm-backend",
  "email": "anisha@example.com",
  "error": "Position not found"
}
2025-09-15 12:24:39 [ERROR]: Unexpected Error Position not found
Stack: Error: Position not found
    at EmployeeService.createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:102:15)
    at async createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:62:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/employees",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 12:24:39 [INFO]: POST /api/v1/employees 500 517 - 42.668 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:25:08 [ERROR]: Failed to create employee
Meta: {
  "service": "hrm-backend",
  "email": "anisha@example.com",
  "error": "\nInvalid `tx.employee.create()` invocation in\n/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:130:44\n\n  127 // Create employee in transaction\n  128 const result = await prisma.$transaction(async (tx) => {\n  129   // Create employee\n→ 130   const employee = await tx.employee.create({\n          data: {\n            employeeId: \"EMP011\",\n            firstName: \"anisha\",\n            lastName: \"shende\",\n            email: \"anisha@example.com\",\n            dateOfBirth: undefined,\n            hireDate: undefined,\n            departmentId: \"cmfkr3xdn0002b70e6u4nz0x4\",\n            positionId: \"cmfkr3xe7000bb70ez74wwe1u\",\n            managerId: undefined,\n            employmentType: undefined,\n            workLocation: undefined,\n            baseSalary: undefined,\n            currency: \"USD\",\n            salaryGrade: undefined,\n            personalInfo: undefined,\n            bankInfo: undefined,\n        +   phone: String\n          },\n          include: {\n            department: true,\n            position: true,\n            manager: {\n              select: {\n                id: true,\n                firstName: true,\n                lastName: true,\n                employeeId: true\n              }\n            }\n          }\n        })\n\nArgument `phone` is missing."
}
2025-09-15 12:25:08 [ERROR]: Unexpected Error 
Invalid `tx.employee.create()` invocation in
/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:130:44

  127 // Create employee in transaction
  128 const result = await prisma.$transaction(async (tx) => {
  129   // Create employee
→ 130   const employee = await tx.employee.create({
          data: {
            employeeId: "EMP011",
            firstName: "anisha",
            lastName: "shende",
            email: "anisha@example.com",
            dateOfBirth: undefined,
            hireDate: undefined,
            departmentId: "cmfkr3xdn0002b70e6u4nz0x4",
            positionId: "cmfkr3xe7000bb70ez74wwe1u",
            managerId: undefined,
            employmentType: undefined,
            workLocation: undefined,
            baseSalary: undefined,
            currency: "USD",
            salaryGrade: undefined,
            personalInfo: undefined,
            bankInfo: undefined,
        +   phone: String
          },
          include: {
            department: true,
            position: true,
            manager: {
              select: {
                id: true,
                firstName: true,
                lastName: true,
                employeeId: true
              }
            }
          }
        })

Argument `phone` is missing.
Stack: PrismaClientValidationError: 
Invalid `tx.employee.create()` invocation in
/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:130:44

  127 // Create employee in transaction
  128 const result = await prisma.$transaction(async (tx) => {
  129   // Create employee
→ 130   const employee = await tx.employee.create({
          data: {
            employeeId: "EMP011",
            firstName: "anisha",
            lastName: "shende",
            email: "anisha@example.com",
            dateOfBirth: undefined,
            hireDate: undefined,
            departmentId: "cmfkr3xdn0002b70e6u4nz0x4",
            positionId: "cmfkr3xe7000bb70ez74wwe1u",
            managerId: undefined,
            employmentType: undefined,
            workLocation: undefined,
            baseSalary: undefined,
            currency: "USD",
            salaryGrade: undefined,
            personalInfo: undefined,
            bankInfo: undefined,
        +   phone: String
          },
          include: {
            department: true,
            position: true,
            manager: {
              select: {
                id: true,
                firstName: true,
                lastName: true,
                employeeId: true
              }
            }
          }
        })

Argument `phone` is missing.
    at wn (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:29:1363)
    at $n.handleRequestError (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6958)
    at $n.handleAndLogRequestError (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6623)
    at $n.request (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6307)
    at async l (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:130:9633)
    at async <anonymous> (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:130:26)
    at async Proxy._transactionWithCallback (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:130:8000)
    at async EmployeeService.createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:128:22)
    at async createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:62:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/employees",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 12:25:08 [INFO]: POST /api/v1/employees 400 117 - 55.654 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:25:47 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:25:47 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:25:47 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 12:26:58 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 12:26:58 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:26:58 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:27:06 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 12:27:07 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:27:07 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 12:27:07 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:27:07 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:27:07 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:27:07 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:27:07 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:27:07 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:27:07 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:27:07 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:28:57 [ERROR]: Failed to create employee
Meta: {
  "service": "hrm-backend",
  "email": "anisha@example.com",
  "error": "\nInvalid `prisma.department.findUnique()` invocation in\n/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:88:50\n\n  85 }\n  86 \n  87 // Verify department exists\n→ 88 const department = await prisma.department.findUnique({\n       where: {\n         id: undefined,\n     ?   name?: String,\n     ?   AND?: DepartmentWhereInput | DepartmentWhereInput[],\n     ?   OR?: DepartmentWhereInput[],\n     ?   NOT?: DepartmentWhereInput | DepartmentWhereInput[],\n     ?   description?: StringNullableFilter | String | Null,\n     ?   managerId?: StringNullableFilter | String | Null,\n     ?   parentDepartmentId?: StringNullableFilter | String | Null,\n     ?   status?: EnumStatusFilter | Status,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   createdById?: StringNullableFilter | String | Null,\n     ?   updatedById?: StringNullableFilter | String | Null,\n     ?   manager?: EmployeeNullableRelationFilter | EmployeeWhereInput | Null,\n     ?   parentDepartment?: DepartmentNullableRelationFilter | DepartmentWhereInput | Null,\n     ?   subDepartments?: DepartmentListRelationFilter,\n     ?   employees?: EmployeeListRelationFilter,\n     ?   positions?: PositionListRelationFilter,\n     ?   jobPostings?: JobPostingListRelationFilter\n       }\n     })\n\nArgument `where` of type DepartmentWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?."
}
2025-09-15 12:28:57 [ERROR]: Unexpected Error 
Invalid `prisma.department.findUnique()` invocation in
/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:88:50

  85 }
  86 
  87 // Verify department exists
→ 88 const department = await prisma.department.findUnique({
       where: {
         id: undefined,
     ?   name?: String,
     ?   AND?: DepartmentWhereInput | DepartmentWhereInput[],
     ?   OR?: DepartmentWhereInput[],
     ?   NOT?: DepartmentWhereInput | DepartmentWhereInput[],
     ?   description?: StringNullableFilter | String | Null,
     ?   managerId?: StringNullableFilter | String | Null,
     ?   parentDepartmentId?: StringNullableFilter | String | Null,
     ?   status?: EnumStatusFilter | Status,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   createdById?: StringNullableFilter | String | Null,
     ?   updatedById?: StringNullableFilter | String | Null,
     ?   manager?: EmployeeNullableRelationFilter | EmployeeWhereInput | Null,
     ?   parentDepartment?: DepartmentNullableRelationFilter | DepartmentWhereInput | Null,
     ?   subDepartments?: DepartmentListRelationFilter,
     ?   employees?: EmployeeListRelationFilter,
     ?   positions?: PositionListRelationFilter,
     ?   jobPostings?: JobPostingListRelationFilter
       }
     })

Argument `where` of type DepartmentWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?.
Stack: PrismaClientValidationError: 
Invalid `prisma.department.findUnique()` invocation in
/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:88:50

  85 }
  86 
  87 // Verify department exists
→ 88 const department = await prisma.department.findUnique({
       where: {
         id: undefined,
     ?   name?: String,
     ?   AND?: DepartmentWhereInput | DepartmentWhereInput[],
     ?   OR?: DepartmentWhereInput[],
     ?   NOT?: DepartmentWhereInput | DepartmentWhereInput[],
     ?   description?: StringNullableFilter | String | Null,
     ?   managerId?: StringNullableFilter | String | Null,
     ?   parentDepartmentId?: StringNullableFilter | String | Null,
     ?   status?: EnumStatusFilter | Status,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   createdById?: StringNullableFilter | String | Null,
     ?   updatedById?: StringNullableFilter | String | Null,
     ?   manager?: EmployeeNullableRelationFilter | EmployeeWhereInput | Null,
     ?   parentDepartment?: DepartmentNullableRelationFilter | DepartmentWhereInput | Null,
     ?   subDepartments?: DepartmentListRelationFilter,
     ?   employees?: EmployeeListRelationFilter,
     ?   positions?: PositionListRelationFilter,
     ?   jobPostings?: JobPostingListRelationFilter
       }
     })

Argument `where` of type DepartmentWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?.
    at wn (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:29:1363)
    at $n.handleRequestError (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6958)
    at $n.handleAndLogRequestError (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6623)
    at $n.request (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6307)
    at async l (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:130:9633)
    at async EmployeeService.createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:88:26)
    at async createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:62:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/employees",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 12:28:57 [INFO]: POST /api/v1/employees 400 117 - 139.232 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:29:36 [ERROR]: Unexpected Error Expected ',' or '}' after property value in JSON at position 29 (line 3 column 3)
Stack: SyntaxError: Expected ',' or '}' after property value in JSON at position 29 (line 3 column 3)
    at JSON.parse (<anonymous>)
    at parse (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/body-parser/lib/types/json.js:92:19)
    at /home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/body-parser/lib/read.js:128:18
    at AsyncResource.runInAsyncScope (node:async_hooks:214:14)
    at invokeCallback (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/raw-body/index.js:238:16)
    at done (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/raw-body/index.js:227:7)
    at IncomingMessage.onEnd (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/raw-body/index.js:287:7)
    at IncomingMessage.emit (node:events:518:28)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/employees",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 12:29:44 [ERROR]: Failed to create employee
Meta: {
  "service": "hrm-backend",
  "email": "anisha@example.com",
  "error": "\nInvalid `prisma.department.findUnique()` invocation in\n/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:88:50\n\n  85 }\n  86 \n  87 // Verify department exists\n→ 88 const department = await prisma.department.findUnique({\n       where: {\n         id: undefined,\n     ?   name?: String,\n     ?   AND?: DepartmentWhereInput | DepartmentWhereInput[],\n     ?   OR?: DepartmentWhereInput[],\n     ?   NOT?: DepartmentWhereInput | DepartmentWhereInput[],\n     ?   description?: StringNullableFilter | String | Null,\n     ?   managerId?: StringNullableFilter | String | Null,\n     ?   parentDepartmentId?: StringNullableFilter | String | Null,\n     ?   status?: EnumStatusFilter | Status,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   createdById?: StringNullableFilter | String | Null,\n     ?   updatedById?: StringNullableFilter | String | Null,\n     ?   manager?: EmployeeNullableRelationFilter | EmployeeWhereInput | Null,\n     ?   parentDepartment?: DepartmentNullableRelationFilter | DepartmentWhereInput | Null,\n     ?   subDepartments?: DepartmentListRelationFilter,\n     ?   employees?: EmployeeListRelationFilter,\n     ?   positions?: PositionListRelationFilter,\n     ?   jobPostings?: JobPostingListRelationFilter\n       }\n     })\n\nArgument `where` of type DepartmentWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?."
}
2025-09-15 12:29:44 [ERROR]: Unexpected Error 
Invalid `prisma.department.findUnique()` invocation in
/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:88:50

  85 }
  86 
  87 // Verify department exists
→ 88 const department = await prisma.department.findUnique({
       where: {
         id: undefined,
     ?   name?: String,
     ?   AND?: DepartmentWhereInput | DepartmentWhereInput[],
     ?   OR?: DepartmentWhereInput[],
     ?   NOT?: DepartmentWhereInput | DepartmentWhereInput[],
     ?   description?: StringNullableFilter | String | Null,
     ?   managerId?: StringNullableFilter | String | Null,
     ?   parentDepartmentId?: StringNullableFilter | String | Null,
     ?   status?: EnumStatusFilter | Status,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   createdById?: StringNullableFilter | String | Null,
     ?   updatedById?: StringNullableFilter | String | Null,
     ?   manager?: EmployeeNullableRelationFilter | EmployeeWhereInput | Null,
     ?   parentDepartment?: DepartmentNullableRelationFilter | DepartmentWhereInput | Null,
     ?   subDepartments?: DepartmentListRelationFilter,
     ?   employees?: EmployeeListRelationFilter,
     ?   positions?: PositionListRelationFilter,
     ?   jobPostings?: JobPostingListRelationFilter
       }
     })

Argument `where` of type DepartmentWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?.
Stack: PrismaClientValidationError: 
Invalid `prisma.department.findUnique()` invocation in
/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:88:50

  85 }
  86 
  87 // Verify department exists
→ 88 const department = await prisma.department.findUnique({
       where: {
         id: undefined,
     ?   name?: String,
     ?   AND?: DepartmentWhereInput | DepartmentWhereInput[],
     ?   OR?: DepartmentWhereInput[],
     ?   NOT?: DepartmentWhereInput | DepartmentWhereInput[],
     ?   description?: StringNullableFilter | String | Null,
     ?   managerId?: StringNullableFilter | String | Null,
     ?   parentDepartmentId?: StringNullableFilter | String | Null,
     ?   status?: EnumStatusFilter | Status,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   createdById?: StringNullableFilter | String | Null,
     ?   updatedById?: StringNullableFilter | String | Null,
     ?   manager?: EmployeeNullableRelationFilter | EmployeeWhereInput | Null,
     ?   parentDepartment?: DepartmentNullableRelationFilter | DepartmentWhereInput | Null,
     ?   subDepartments?: DepartmentListRelationFilter,
     ?   employees?: EmployeeListRelationFilter,
     ?   positions?: PositionListRelationFilter,
     ?   jobPostings?: JobPostingListRelationFilter
       }
     })

Argument `where` of type DepartmentWhereUniqueInput needs at least one of `id` or `name` arguments. Available options are marked with ?.
    at wn (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:29:1363)
    at $n.handleRequestError (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6958)
    at $n.handleAndLogRequestError (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6623)
    at $n.request (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6307)
    at async l (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:130:9633)
    at async EmployeeService.createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:88:26)
    at async createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:62:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/employees",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 12:29:44 [INFO]: POST /api/v1/employees 400 117 - 10.482 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:31:59 [ERROR]: Failed to create employee
Meta: {
  "service": "hrm-backend",
  "email": "anisha@example.com",
  "error": "Department not found"
}
2025-09-15 12:31:59 [ERROR]: Unexpected Error Department not found
Stack: Error: Department not found
    at EmployeeService.createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:93:15)
    at async createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:62:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/employees",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 12:31:59 [INFO]: POST /api/v1/employees 500 520 - 9.307 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:32:35 [ERROR]: Failed to create employee
Meta: {
  "service": "hrm-backend",
  "email": "anisha@example.com",
  "error": "\nInvalid `tx.employee.create()` invocation in\n/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:130:44\n\n  127 // Create employee in transaction\n  128 const result = await prisma.$transaction(async (tx) => {\n  129   // Create employee\n→ 130   const employee = await tx.employee.create({\n          data: {\n            employeeId: \"EMP011\",\n            firstName: \"Anisha\",\n            lastName: \"Shende\",\n            email: \"anisha@example.com\",\n            phone: \"9420853261\",\n            dateOfBirth: \"2004-12-01T00:00:00.000Z\",\n            hireDate: \"2025-08-21T00:00:00.000Z\",\n            departmentId: \"cmfkr3xcz0000b70egispsqh3\",\n            positionId: \"cmfkr3xf6000gb70exresiqf4\",\n            managerId: undefined,\n            employmentType: \"FULL_TIME\",\n            workLocation: \"ONSITE\",\n                          ~~~~~~~~\n            baseSalary: 60000,\n            currency: \"USD\",\n            salaryGrade: \"G7\",\n            personalInfo: {\n              address: \"Pune, India\",\n              gender: \"Female\",\n              maritalStatus: \"Single\"\n            },\n            bankInfo: {\n              accountNumber: \"1234567890\",\n              ifsc: \"HDFC0001234\",\n              bankName: \"HDFC Bank\"\n            }\n          },\n          include: {\n            department: true,\n            position: true,\n            manager: {\n              select: {\n                id: true,\n                firstName: true,\n                lastName: true,\n                employeeId: true\n              }\n            }\n          }\n        })\n\nInvalid value for argument `workLocation`. Expected WorkLocation."
}
2025-09-15 12:32:35 [ERROR]: Unexpected Error 
Invalid `tx.employee.create()` invocation in
/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:130:44

  127 // Create employee in transaction
  128 const result = await prisma.$transaction(async (tx) => {
  129   // Create employee
→ 130   const employee = await tx.employee.create({
          data: {
            employeeId: "EMP011",
            firstName: "Anisha",
            lastName: "Shende",
            email: "anisha@example.com",
            phone: "9420853261",
            dateOfBirth: "2004-12-01T00:00:00.000Z",
            hireDate: "2025-08-21T00:00:00.000Z",
            departmentId: "cmfkr3xcz0000b70egispsqh3",
            positionId: "cmfkr3xf6000gb70exresiqf4",
            managerId: undefined,
            employmentType: "FULL_TIME",
            workLocation: "ONSITE",
                          ~~~~~~~~
            baseSalary: 60000,
            currency: "USD",
            salaryGrade: "G7",
            personalInfo: {
              address: "Pune, India",
              gender: "Female",
              maritalStatus: "Single"
            },
            bankInfo: {
              accountNumber: "1234567890",
              ifsc: "HDFC0001234",
              bankName: "HDFC Bank"
            }
          },
          include: {
            department: true,
            position: true,
            manager: {
              select: {
                id: true,
                firstName: true,
                lastName: true,
                employeeId: true
              }
            }
          }
        })

Invalid value for argument `workLocation`. Expected WorkLocation.
Stack: PrismaClientValidationError: 
Invalid `tx.employee.create()` invocation in
/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:130:44

  127 // Create employee in transaction
  128 const result = await prisma.$transaction(async (tx) => {
  129   // Create employee
→ 130   const employee = await tx.employee.create({
          data: {
            employeeId: "EMP011",
            firstName: "Anisha",
            lastName: "Shende",
            email: "anisha@example.com",
            phone: "9420853261",
            dateOfBirth: "2004-12-01T00:00:00.000Z",
            hireDate: "2025-08-21T00:00:00.000Z",
            departmentId: "cmfkr3xcz0000b70egispsqh3",
            positionId: "cmfkr3xf6000gb70exresiqf4",
            managerId: undefined,
            employmentType: "FULL_TIME",
            workLocation: "ONSITE",
                          ~~~~~~~~
            baseSalary: 60000,
            currency: "USD",
            salaryGrade: "G7",
            personalInfo: {
              address: "Pune, India",
              gender: "Female",
              maritalStatus: "Single"
            },
            bankInfo: {
              accountNumber: "1234567890",
              ifsc: "HDFC0001234",
              bankName: "HDFC Bank"
            }
          },
          include: {
            department: true,
            position: true,
            manager: {
              select: {
                id: true,
                firstName: true,
                lastName: true,
                employeeId: true
              }
            }
          }
        })

Invalid value for argument `workLocation`. Expected WorkLocation.
    at wn (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:29:1363)
    at $n.handleRequestError (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6958)
    at $n.handleAndLogRequestError (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6623)
    at $n.request (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:121:6307)
    at async l (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:130:9633)
    at async <anonymous> (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:130:26)
    at async Proxy._transactionWithCallback (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/node_modules/@prisma/client/runtime/library.js:130:8000)
    at async EmployeeService.createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:128:22)
    at async createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:62:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/employees",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 12:32:35 [INFO]: POST /api/v1/employees 400 117 - 39.156 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:34:44 [INFO]: Employee created successfully
Meta: {
  "service": "hrm-backend",
  "employeeId": "cmfks3zon0005b6ku079n7j6g",
  "employeeNumber": "EMP011",
  "email": "anisha@example.com"
}
2025-09-15 12:34:44 [INFO]: Employee created successfully
Meta: {
  "service": "hrm-backend",
  "employeeId": "cmfks3zon0005b6ku079n7j6g",
  "employeeNumber": "EMP011"
}
2025-09-15 12:34:44 [INFO]: POST /api/v1/employees 201 - - 68.937 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:43:21 [INFO]: POST /api-docs/ 200 - - 1.077 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:43:37 [INFO]: POST /api-docs/ 200 - - 0.777 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:44:14 [ERROR]: Failed to create employee
Meta: {
  "service": "hrm-backend",
  "email": "aparna.badhe@example.com",
  "error": "Department not found"
}
2025-09-15 12:44:14 [ERROR]: Unexpected Error Department not found
Stack: Error: Department not found
    at EmployeeService.createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:93:15)
    at async createEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:62:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/employees",
  "ip": "::1",
  "userAgent": "PostmanRuntime/7.46.0"
}
2025-09-15 12:44:14 [INFO]: POST /api/v1/employees 500 520 - 39.907 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:44:47 [INFO]: Employee created successfully
Meta: {
  "service": "hrm-backend",
  "employeeId": "cmfksgwwi0008b6kuuak3ltaj",
  "employeeNumber": "EMP012",
  "email": "aparna.badhe@example.com"
}
2025-09-15 12:44:47 [INFO]: Employee created successfully
Meta: {
  "service": "hrm-backend",
  "employeeId": "cmfksgwwi0008b6kuuak3ltaj",
  "employeeNumber": "EMP012"
}
2025-09-15 12:44:47 [INFO]: POST /api/v1/employees 201 - - 49.219 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:46:54 [INFO]: Employees retrieved successfully
Meta: {
  "service": "hrm-backend",
  "total": 12,
  "page": 2
}
2025-09-15 12:46:54 [INFO]: GET /api/v1/employees?page=2&limit=4 200 - - 20.080 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:49:10 [INFO]: Employees retrieved successfully
Meta: {
  "service": "hrm-backend",
  "total": 12,
  "page": 2
}
2025-09-15 12:49:10 [INFO]: GET /api/v1/employees?page=2&limit=4 200 - - 14.581 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:50:29 [ERROR]: Failed to get employee
Meta: {
  "service": "hrm-backend",
  "id": "EMP011",
  "error": "Employee not found"
}
2025-09-15 12:50:29 [ERROR]: Unexpected Error Employee not found
Stack: Error: Employee not found
    at EmployeeService.getEmployeeById (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:251:15)
    at async getEmployeeById (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:45:24)
Meta: {
  "service": "hrm-backend",
  "method": "GET",
  "url": "/api/v1/employees/EMP011",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 12:50:29 [INFO]: GET /api/v1/employees/EMP011 500 519 - 38.118 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:22 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:22 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:22 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:22 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:27 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 12:55:27 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:27 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 12:55:27 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:27 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:27 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:27 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:27 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:27 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:27 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:27 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:35 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:35 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:35 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:35 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:37 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 12:55:37 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:37 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 12:55:37 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:37 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:37 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:37 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:37 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:37 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:37 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:55:37 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:31 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:31 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:31 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:31 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:33 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 12:58:34 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:34 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "2ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 12:58:34 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:34 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:34 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:34 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:34 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:34 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:34 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:34 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:58:39 [ERROR]: Failed to get employee
Meta: {
  "service": "hrm-backend",
  "id": "EMP011",
  "error": "Employee not found"
}
2025-09-15 12:58:39 [ERROR]: Unexpected Error Employee not found
Stack: Error: Employee not found
    at EmployeeService.getEmployeeById (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:251:15)
    at async getEmployeeById (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:45:24)
Meta: {
  "service": "hrm-backend",
  "method": "GET",
  "url": "/api/v1/employees/EMP011",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 12:58:39 [INFO]: GET /api/v1/employees/EMP011 500 519 - 139.259 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:53 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:53 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:53 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:53 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:56 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 12:59:56 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:56 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 12:59:56 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:56 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:56 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:56 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:56 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:56 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:56 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 12:59:56 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:57 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:57 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:57 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:57 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:59 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 13:01:59 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:59 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 13:01:59 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:59 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:59 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:59 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:59 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:59 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:59 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:01:59 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:44 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:44 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:44 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:44 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:46 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 13:02:46 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:46 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 13:02:46 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:46 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:46 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:46 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:46 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:46 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:46 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:02:46 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:11 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:11 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:11 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:11 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:13 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 13:04:13 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:13 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "0ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 13:04:13 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:13 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:13 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:13 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:13 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:13 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:13 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:04:13 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:26 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:26 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:26 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:26 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 13:05:28 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 13:05:28 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:05:28 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:32:23 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 13:32:23 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:32:23 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 13:32:23 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:32:23 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:32:23 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:32:23 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:32:23 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:32:23 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:32:23 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:32:23 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:32:53 [ERROR]: Failed to update employee
Meta: {
  "service": "hrm-backend",
  "employeeId": "EMP011",
  "error": "Employee not found"
}
2025-09-15 13:32:53 [ERROR]: Unexpected Error Employee not found
Stack: Error: Employee not found
    at EmployeeService.updateEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/employee.service.ts:401:15)
    at async updateEmployee (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/employee.controller.ts:84:24)
Meta: {
  "service": "hrm-backend",
  "method": "PUT",
  "url": "/api/v1/employees/EMP011",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 13:32:53 [INFO]: PUT /api/v1/employees/EMP011 500 517 - 113.575 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:37:03 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:37:03 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:37:03 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:52:28 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 13:52:28 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:52:28 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "19ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 13:52:28 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:52:28 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:52:28 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:52:28 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:52:28 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:52:28 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:52:28 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:52:28 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:53:17 [INFO]: GET /api-docs?id=403073ab-2dd8-41b1-b1c6-32436af18eea&vscodeBrowserReqId=1757924597103 301 235 - 4.805 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:53:17 [INFO]: GET /api-docs/?id=403073ab-2dd8-41b1-b1c6-32436af18eea&vscodeBrowserReqId=1757924597103 200 - - 8.473 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:54:14 [INFO]: GET /api-docs/ 304 - - 2.388 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:54:14 [INFO]: GET /api-docs/swagger-ui.css 304 - - 3.332 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:54:15 [INFO]: GET /api-docs/swagger-ui-bundle.js 304 - - 3.396 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:54:15 [INFO]: GET /api-docs/swagger-ui-standalone-preset.js 304 - - 5.888 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:54:15 [INFO]: GET /api-docs/swagger-ui-init.js 200 - - 2.332 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:54:16 [INFO]: GET /api-docs/favicon-32x32.png 304 - - 1.727 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:56:30 [ERROR]: Login failed
Meta: {
  "service": "hrm-backend",
  "email": "user@company.com",
  "error": "Invalid email or password"
}
2025-09-15 13:56:30 [ERROR]: Unexpected Error Invalid email or password
Stack: Error: Invalid email or password
    at AuthService.login (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/auth.service.ts:177:15)
    at async login (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/auth.controller.ts:10:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/auth/login",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 13:56:30 [INFO]: POST /api/v1/auth/login 500 501 - 149.921 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:56:51 [ERROR]: Login failed
Meta: {
  "service": "hrm-backend",
  "email": "david.rodriguez@company.com",
  "error": "Invalid email or password"
}
2025-09-15 13:56:51 [ERROR]: Unexpected Error Invalid email or password
Stack: Error: Invalid email or password
    at AuthService.login (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/services/auth.service.ts:191:15)
    at async login (/home/anisha/Desktop/Projects/hrms_fullstack/uptiqai-hrm-system/Human-Resource-Management-System/backend/src/controllers/auth.controller.ts:10:22)
Meta: {
  "service": "hrm-backend",
  "method": "POST",
  "url": "/api/v1/auth/login",
  "ip": "::1",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
}
2025-09-15 13:56:51 [INFO]: POST /api/v1/auth/login 500 501 - 278.800 ms - User: anonymous
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:56:58 [INFO]: Received SIGTERM, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:56:58 [INFO]: SIGTERM received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:56:58 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:56:58 [INFO]: ✅ Database disconnected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:57:01 [INFO]: Prisma Info Starting a postgresql pool with 21 connections.
Meta: {
  "service": "hrm-backend",
  "target": "quaint::pooled"
}
2025-09-15 13:57:01 [INFO]: ✅ Database connected successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:57:01 [DEBUG]: Prisma Query
Meta: {
  "service": "hrm-backend",
  "query": "SELECT 1",
  "params": "[]",
  "duration": "1ms",
  "target": "quaint::connector::metrics"
}
2025-09-15 13:57:01 [DEBUG]: Database health check passed
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:57:01 [INFO]: ✅ Database connection established
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:57:01 [INFO]: ✅ Server startup completed successfully
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:57:01 [INFO]: 🚀 Server is running on port 3001
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:57:01 [INFO]: � Environment: development
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:57:01 [INFO]: �📚 API Documentation: http://localhost:3001/api-docs
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:57:01 [INFO]: 🏥 Health Check: http://localhost:3001/health
Meta: {
  "service": "hrm-backend"
}
2025-09-15 13:57:01 [INFO]: 🔗 API Base URL: http://localhost:3001/api/v1
Meta: {
  "service": "hrm-backend"
}
2025-09-15 14:03:03 [INFO]: Received SIGINT, closing database connection...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 14:03:03 [INFO]: SIGINT received, starting graceful shutdown...
Meta: {
  "service": "hrm-backend"
}
2025-09-15 14:03:03 [INFO]: ✅ HTTP server closed
Meta: {
  "service": "hrm-backend"
}
