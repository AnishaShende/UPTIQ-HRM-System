services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hrm-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-hrm_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-hrm_db}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hrm-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: hrm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hrm-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hrm-backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-hrm_user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-hrm_db}
      REDIS_URL: redis://redis:6379
      NODE_ENV: development
      PORT: 3000
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: http://localhost:5173
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - uploads_data:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - hrm-network
    restart: unless-stopped
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hrm-frontend
    environment:
      VITE_API_URL: http://localhost:3000/api/v1
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - hrm-network
    restart: unless-stopped
    command: npm run dev

  # RAG FastAPI Service
  rag-service:
    build:
      context: ./rag_service
      dockerfile: Dockerfile
    container_name: hrm-rag-service
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      RAG_DATA_DIR: /workspace/rag/uptiq_hr_policies
      RAG_PERSIST_DIR: /data/chroma
    ports:
      - "8001:8001"
    volumes:
      - ./rag/uptiq_hr_policies:/workspace/rag/uptiq_hr_policies:ro
      - rag_chroma_data:/data
    networks:
      - hrm-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  uploads_data:
  rag_chroma_data:

networks:
  hrm-network:
    driver: bridge
