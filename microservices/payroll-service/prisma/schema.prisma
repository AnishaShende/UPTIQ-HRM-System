generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:root@localhost:5432/hrm_payroll_db"
}

// Payroll Period Management
model PayrollPeriod {
  id              String           @id @default(cuid())
  name            String
  description     String?
  startDate       DateTime
  endDate         DateTime
  payDate         DateTime         // When employees get paid
  status          PayrollStatus    @default(DRAFT)
  totalEmployees  Int              @default(0)
  totalGrossPay   Float            @default(0)
  totalDeductions Float            @default(0)
  totalNetPay     Float            @default(0)
  currency        String           @default("USD")
  processingNotes String?
  approvedBy      String?
  approvedDate    DateTime?
  closedBy        String?
  closedDate      DateTime?
  isRecurring     Boolean          @default(false)
  frequency       PayrollFrequency @default(MONTHLY)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  createdById     String?
  updatedById     String?

  // Relations
  payslips PaySlip[]

  @@unique([startDate, endDate])
  @@map("payroll_periods")
}

// Employee Payslip/Paycheck
model PaySlip {
  id                    String        @id @default(cuid())
  employeeId            String
  payrollPeriodId       String
  employeeIdNumber      String // Reference to employee number
  fullName              String
  designation           String
  department            String
  bankAccount           String?
  
  // Period Information
  payPeriodStart        DateTime
  payPeriodEnd          DateTime
  payDate               DateTime
  workingDays           Int           @default(0)
  actualWorkingDays     Float         @default(0)
  
  // Salary Information
  baseSalary            Float         @default(0)
  hourlyRate            Float?
  hoursWorked           Float?
  overtimeHours         Float         @default(0)
  overtimeRate          Float?
  overtimePay           Float         @default(0)
  
  // Earnings/Allowances
  earnings              Json          // JSON field for flexible earnings structure
  totalEarnings         Float         @default(0)
  
  // Deductions
  deductions            Json          // JSON field for flexible deductions structure
  totalDeductions       Float         @default(0)
  
  // Tax Information
  taxableIncome         Float         @default(0)
  incomeTax             Float         @default(0)
  socialSecurityTax     Float         @default(0)
  medicareTax           Float         @default(0)
  stateTax              Float         @default(0)
  localTax              Float         @default(0)
  totalTaxes            Float         @default(0)
  
  // Final Amounts
  grossPay              Float         @default(0)
  netPay                Float         @default(0)
  currency              String        @default("USD")
  
  // Status and Processing
  status                PayslipStatus @default(GENERATED)
  paymentMethod         PaymentMethod @default(BANK_TRANSFER)
  paymentReference      String?
  paymentDate           DateTime?
  isVoid                Boolean       @default(false)
  voidReason            String?
  voidedBy              String?
  voidedDate            DateTime?
  
  // Metadata
  generatedBy           String?
  approvedBy            String?
  approvedDate          DateTime?
  notes                 String?
  attachments           String[]      // File paths for attachments
  
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  createdById           String?
  updatedById           String?

  // Relations
  payrollPeriod PayrollPeriod @relation(fields: [payrollPeriodId], references: [id])

  @@unique([employeeId, payrollPeriodId])
  @@map("payslips")
}

// Employee Salary History and Changes
model SalaryHistory {
  id                String           @id @default(cuid())
  employeeId        String
  effectiveDate     DateTime
  endDate           DateTime?
  baseSalary        Float
  currency          String           @default("USD")
  salaryGrade       String?
  payFrequency      PayrollFrequency @default(MONTHLY)
  
  // Allowances and Benefits
  allowances        Json?            // JSON field for various allowances
  benefits          Json?            // JSON field for benefits information
  
  // Change Information
  changeReason      String
  changeType        SalaryChangeType
  previousSalary    Float?
  salaryIncrease    Float?
  percentageIncrease Float?
  
  // Approval
  approvedBy        String?
  approvedDate      DateTime?
  status            SalaryStatus     @default(ACTIVE)
  
  // Comments and documentation
  comments          String?
  supportingDocs    String[]         // File paths for supporting documents
  
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  createdById       String?
  updatedById       String?

  @@map("salary_history")
}

// Payroll Statistics and Analytics
model PayrollStats {
  id                    String    @id @default(cuid())
  period                String    // e.g., "2024-01", "2024-Q1", "2024"
  periodType            PeriodType
  year                  Int
  month                 Int?
  quarter               Int?
  
  // Employee Statistics
  totalEmployees        Int       @default(0)
  activeEmployees       Int       @default(0)
  newHires              Int       @default(0)
  terminations          Int       @default(0)
  
  // Financial Statistics
  totalGrossPay         Float     @default(0)
  totalNetPay           Float     @default(0)
  totalDeductions       Float     @default(0)
  totalTaxes            Float     @default(0)
  totalBenefits         Float     @default(0)
  averageSalary         Float     @default(0)
  medianSalary          Float     @default(0)
  currency              String    @default("USD")
  
  // Department Breakdown
  departmentBreakdown   Json?     // JSON field for department-wise statistics
  
  // Processing Information
  payrollPeriods        Int       @default(0)
  processingTime        Int?      // Time taken to process in minutes
  
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  createdById           String?
  updatedById           String?

  @@unique([period, periodType])
  @@map("payroll_stats")
}

// Payroll Configuration and Settings
model PayrollConfig {
  id                    String   @id @default(cuid())
  name                  String   @unique
  description           String?
  configType            String   // e.g., "TAX_RATES", "DEDUCTION_TYPES", "EARNINGS_TYPES"
  configValue           Json     // JSON field for flexible configuration
  isActive              Boolean  @default(true)
  effectiveFrom         DateTime
  effectiveTo           DateTime?
  applicableCountries   String[] // Array of country codes
  applicableStates      String[] // Array of state codes
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  createdById           String?
  updatedById           String?

  @@map("payroll_config")
}

// Employee Tax Information
model EmployeeTaxInfo {
  id                    String    @id @default(cuid())
  employeeId            String    @unique
  taxYear               Int
  
  // Tax Status
  filingStatus          String    // e.g., "SINGLE", "MARRIED_FILING_JOINTLY", etc.
  dependents            Int       @default(0)
  exemptions            Int       @default(0)
  
  // Withholding Information
  federalExemptions     Int       @default(0)
  stateExemptions       Int       @default(0)
  additionalWithholding Float     @default(0)
  
  // Tax IDs
  ssn                   String?   // Social Security Number (encrypted)
  taxId                 String?   // Alternative tax ID
  
  // Year-to-Date Totals
  ytdGrossPay           Float     @default(0)
  ytdFederalTax         Float     @default(0)
  ytdStateTax           Float     @default(0)
  ytdSocialSecurity     Float     @default(0)
  ytdMedicare           Float     @default(0)
  ytdNetPay             Float     @default(0)
  
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  createdById           String?
  updatedById           String?

  @@map("employee_tax_info")
}

// Payroll Processing Logs
model PayrollProcessingLog {
  id                String             @id @default(cuid())
  payrollPeriodId   String?
  processType       ProcessType
  status            ProcessingStatus
  startTime         DateTime           @default(now())
  endTime           DateTime?
  duration          Int?               // Duration in seconds
  employeesProcessed Int              @default(0)
  successCount      Int                @default(0)
  errorCount        Int                @default(0)
  warningCount      Int                @default(0)
  
  // Processing Details
  processedBy       String?
  processingDetails Json?              // JSON field for detailed processing information
  errors            Json?              // JSON field for error details
  warnings          Json?              // JSON field for warning details
  
  createdAt         DateTime           @default(now())

  @@map("payroll_processing_logs")
}

// Enums
enum PayrollStatus {
  DRAFT
  IN_PROGRESS
  PROCESSED
  APPROVED
  PAID
  CLOSED
  CANCELLED
}

enum PayrollFrequency {
  WEEKLY
  BI_WEEKLY
  SEMI_MONTHLY
  MONTHLY
  QUARTERLY
  ANNUALLY
}

enum PayslipStatus {
  GENERATED
  REVIEWED
  APPROVED
  PAID
  VOID
  ERROR
}

enum PaymentMethod {
  BANK_TRANSFER
  CHECK
  CASH
  DIRECT_DEPOSIT
  WIRE_TRANSFER
}

enum SalaryChangeType {
  INITIAL
  PROMOTION
  ANNUAL_INCREASE
  MERIT_INCREASE
  COST_OF_LIVING
  DEMOTION
  TRANSFER
  ADJUSTMENT
  BONUS
}

enum SalaryStatus {
  ACTIVE
  INACTIVE
  PENDING
  SUPERSEDED
}

enum PeriodType {
  MONTHLY
  QUARTERLY
  YEARLY
}

enum ProcessType {
  FULL_PAYROLL
  PAYSLIP_GENERATION
  TAX_CALCULATION
  DEDUCTION_PROCESSING
  STATS_CALCULATION
  BULK_UPDATE
}

enum ProcessingStatus {
  STARTED
  IN_PROGRESS
  COMPLETED
  FAILED
  CANCELLED
}
